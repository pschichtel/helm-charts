# Default values for mediawiki.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

nginxImage:
  repository: docker.io/library/nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.27.5"

mediawikiImage:
  repository: docker.io/library/mediawiki
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

httpProbeTimeout: 2

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: example.org
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nginxResources:
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# Minimum expected memory usage is: php.ini(memory_limit) * php-fpm.ini(pm.max_children) * per-process-buffer + php.ini(opcache.memory_consumption) + global-buffer
# Given the default from this chart and assuming a 10% per-process buffer and 50Mi of global buffer:
# 64Mi * 10 * 1.10 + 128Mi + 50Mi = 882Mi
mediawikiResources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: false
  pvc:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi

php:
  ini:
    # Allow uploads

    # single process/execution memory limit, align this with PHP-FPM, opcache and pod resources
    memory_limit: '64M'

    # Maximale Größe für POST Requests
    post_max_size: '64M'

    # Maximum upload size, align this with your reverse proxy
    file_uploads: 'On'
    upload_max_filesize: '{{ .Values.php.ini.post_max_size }}'

    opcache.enable_cli: '0'
    opcache.memory_consumption: '128'
    opcache.interned_strings_buffer: '16'
    opcache.max_accelerated_files: '10000'
    opcache.validate_timestamps: '1'
    opcache.revalidate_freq: '60'
    opcache.revalidate_path: '1'
    opcache.fast_shutdown: '1'
    opcache.max_file_size: '0'
    opcache.file_update_protection: '0'

    expose_php: 'off'

    display_errors: '1'
    log_errors: '1'
    fastcgi.logging: '1'
  rawIni: ''
  opcache:
    enabled: true
    size: 200Mi
  fpmGlobalIni: {}
  rawFpmGlobalIni: ''
  # make sure to align the pod resources with PHP-FPM
  fpmPoolIni:
    pm: 'dynamic'
    pm.max_children: '10'
    pm.min_spare_servers: '2'
    pm.max_spare_servers: '4'
    pm.max_requests: '200'
  rawFpmPoolIni: ''

exporter:
  enabled: false
  image:
    repository: docker.io/hipages/php-fpm_exporter
    tag: '2.2.0'
  statusPath: /status
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  serviceMonitor:
    enabled: false

mediawiki:
  siteName: MediaWiki
  metaNamespace: null

  database:
    type: mysql
    server: null
    name: mediawiki
    username: mediawiki
    password: mediawiki

  localSettings:
    template: false
    content: null
