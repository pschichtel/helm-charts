# Default values for wordpress.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

nginxImage:
  repository: docker.io/nginxinc/nginx-unprivileged
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.29.0"

wordpressImage:
  repository: docker.io/library/wordpress
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# annotations on the deployment
annotations: {}

# annotations on pods
podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

nginxSecurityContext:
  allowPrivilegeEscalation: false
  runAsUser: 33
  runAsGroup: 33
  runAsNonRoot: true
wordpressSecurityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: example.org
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nginxResources:
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# Minimum expected memory usage is: php.ini(memory_limit) * php-fpm.ini(pm.max_children) * per-process-buffer + php.ini(opcache.memory_consumption) + global-buffer
# Given the default from this chart and assuming a 10% per-process buffer and 50Mi of global buffer:
# 64Mi * 10 * 1.10 + 128Mi + 50Mi = 882Mi
wordpressResources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  pvc:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi

volumes: []

nginxVolumeMounts: []

wordpressVolumeMounts: []

php:
  ini:
    # Allow uploads

    # single process/execution memory limit, align this with PHP-FPM, opcache and pod resources
    memory_limit: '64M'

    # Maximale Größe für POST Requests
    post_max_size: '64M'

    # Maximum upload size, align this with your reverse proxy
    file_uploads: 'On'
    upload_max_filesize: '{{ .Values.php.ini.post_max_size }}'

    opcache.enable_cli: '0'
    opcache.memory_consumption: '128'
    opcache.interned_strings_buffer: '16'
    opcache.max_accelerated_files: '10000'
    opcache.validate_timestamps: '1'
    opcache.revalidate_freq: '60'
    opcache.revalidate_path: '1'
    opcache.fast_shutdown: '1'
    opcache.max_file_size: '0'
    opcache.file_update_protection: '0'

    expose_php: 'off'

    display_errors: '1'
    log_errors: '1'
    fastcgi.logging: '1'
  rawIni: ''
  opcache:
    enabled: true
    size: 200Mi
  fpmGlobalIni: {}
  rawFpmGlobalIni: ''
  # make sure to align the pod resources with PHP-FPM
  fpmPoolIni:
    pm: 'dynamic'
    pm.max_children: '10'
    pm.min_spare_servers: '2'
    pm.max_spare_servers: '4'
    pm.max_requests: '200'
  rawFpmPoolIni: ''

probes:
  enabled: true
  path: '/'
  headers: []
  timeout: 2
  period: 20

exporter:
  enabled: false
  image:
    repository: docker.io/hipages/php-fpm_exporter
    tag: '2.2.0'
  statusPath: /status
  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  serviceMonitor:
    enabled: false

nginxConfig:
  serverSnippets:
    010-gzip: |
      # Enable Gzip compression
      gzip          on;

      # Compression level (1-9)
      gzip_comp_level     5;

      # Don't compress anything under 256 bytes
      gzip_min_length     256;

      # Compress output of these MIME-types
      gzip_types
          application/atom+xml
          application/javascript
          application/json
          application/rss+xml
          application/vnd.ms-fontobject
          application/x-font-ttf
          application/x-font-opentype
          application/x-font-truetype
          application/x-javascript
          application/x-web-app-manifest+json
          application/xhtml+xml
          application/xml
          font/eot
          font/opentype
          font/otf
          image/svg+xml
          image/x-icon
          image/vnd.microsoft.icon
          text/css
          text/plain
          text/javascript
          text/x-component;

      # Disable gzip for bad browsers
      gzip_disable  "MSIE [1-6]\.(?!.*SV1)";
    020-root-location: |
      location / {
          index  index.html index.htm index.php;
          try_files $uri $uri/ /index.php?$args;
      }
    030-favicon: |
      location = /favicon.ico {
          log_not_found off;
          access_log off;
      }
    040-robots: |
      location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
      }
    050-caching: |
      # Set browser cachig for JavaScript, CSS and text files
      location ~* \.(txt|xml|js|css)$ {
          expires 1y;
          log_not_found off;
      }

      # Set browser cachig for all media files
      location ~* \.(flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav|mp4|m4v|ogg|webm|aac|eot|ttf|otf|woff|woff2|svg)$ {
          expires 1y;
          log_not_found off;
      }

      # Set browser cachig for all image files
      location ~* \.(jpg|jpeg|png|gif|ico|swf|webp)$ {
          expires 1y;
          log_not_found off;
      }
    060-error-page: |
      #error_page  404              /404.html;

      error_page  500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }
    070-php: |
      location ~ ^(.+\.php)((?:\?|/).*)?$ {
          include                 fastcgi_params;

          fastcgi_pass            127.0.0.1:9000;
          fastcgi_param           PATH_INFO          $fastcgi_path_info;
          fastcgi_param           SCRIPT_FILENAME    /var/www/html$fastcgi_script_name;

          fastcgi_connect_timeout   3m;
          fastcgi_read_timeout      3m;
          fastcgi_send_timeout      3m;
          fastcgi_split_path_info   ^(.+\.php)((?:\?|/).*)?$;
          fastcgi_request_buffering off;

          client_max_body_size 0;

          try_files $fastcgi_script_name =404;

          include /php-location/*.conf;
      }
    080-anti-apache: |
      location ~ /\.ht {
          deny  all;
      }
